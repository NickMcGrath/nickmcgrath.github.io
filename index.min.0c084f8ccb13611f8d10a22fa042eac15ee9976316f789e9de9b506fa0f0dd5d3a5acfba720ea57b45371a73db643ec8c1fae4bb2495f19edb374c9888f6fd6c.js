var suggestions=document.getElementById("suggestions"),search=document.getElementById("search");search!==null&&document.addEventListener("keydown",inputFocus);function inputFocus(e){e.ctrlKey&&e.key==="/"&&(e.preventDefault(),search.focus()),e.key==="Escape"&&(search.blur(),suggestions.classList.add("d-none"))}document.addEventListener("click",function(e){var t=suggestions.contains(e.target);t||suggestions.classList.add("d-none")}),document.addEventListener("keydown",suggestionFocus);function suggestionFocus(e){const s=suggestions.classList.contains("d-none");if(s)return;const t=[...suggestions.querySelectorAll("a")];if(t.length===0)return;const n=t.indexOf(document.activeElement);if(e.key==="ArrowUp"){e.preventDefault();const s=n>0?n-1:0;t[s].focus()}else if(e.key==="ArrowDown"){e.preventDefault();const s=n+1<t.length?n+1:n;t[s].focus()}}(function(){var e=new FlexSearch.Document({tokenize:"forward",cache:100,document:{id:"id",store:["href","title","description"],index:["title","description","content"]}});e.add({id:0,href:"/docs/prologue/introduction/",title:"Introduction",description:"Doks is a Hugo theme for building secure, fast, and SEO-ready documentation websites, which you can easily update and customize.",content:`Get started #There are two main ways to get started with Doks:
Tutorial #ðŸ‘‰ The Tutorial is intended for novice to intermediate users. Step-by-step instructions on how to start a new Doks project. Tutorial â†’
Quick Start #ðŸ‘‰ The Quick Start is intended for intermediate to advanced users. One page summary of how to start a new Doks project. Quick Start â†’
Go further #Recipes, Reference Guides, Extensions, and Showcase.
Recipes #Get instructions on how to accomplish common tasks with Doks. Recipes â†’
Reference Guides #Learn how to customize Doks to fully make it your own. Reference Guides â†’
Extensions #Get instructions on how to add even more to Doks. Extensions â†’
Showcase #See what others have build with Doks. Showcase â†’
Contributing #Find out how to contribute to Doks. Contributing â†’
Help #Get help on Doks. Help â†’
`}),e.add({id:1,href:"/docs/prologue/",title:"Prologue",description:"Prologue Doks.",content:""}),e.add({id:2,href:"/docs/prologue/quick-start/",title:"Quick Start",description:"One page summary of how to start a new Doks project.",content:`Requirements #Git â€” latest source release Node.js â€” latest LTS version or newer Why Node.js?Doks uses npm (included with Node.js) to centralize dependency management, making it easy to update resources, build tooling, plugins, and build scripts. Start a new Doks project #Create a new site, change directories, install dependencies, and start development server.
Create a new site #Doks is available as a child theme and a starter theme.
Child theme #Intended for novice to intermediate users Intended for minor customizations Easily update npm packages â€” including Doks git clone https://github.com/h-enk/doks-child-theme.git my-doks-site Starter theme #Intended for intermediate to advanced users Intended for major customizations Easily update npm packages git clone https://github.com/h-enk/doks.git my-doks-site Help me chooseNot sure which one is for you? Pick the child theme. Change directories #cd my-doks-site Install dependencies #npm install Start development server #npm run start Doks will start the Hugo development webserver accessible by default at http://localhost:1313. Saved changes will live reload in the browser.
Other commands #Doks comes with commands for common tasks. Commands â†’
`}),e.add({id:3,href:"/docs/prologue/commands/",title:"Commands",description:"Doks comes with commands for common tasks.",content:`ðŸ’¡ You can change the commands in the scripts section of \`./package.json\`. create #Create new content for your site:
npm run create [path] [flags] See also the Hugo docs: hugo new.
Docs based tree #Create a docs based tree â€” with a single command:
npm run create -- --kind docs [section] For example, create a docs based tree named guides:
npm run create -- --kind docs guides lint #Check scripts, styles, and markdown for errors:
npm run lint scripts #Check scripts for errors:
npm run lint:scripts [-- --fix] styles #Check styles for errors:
npm run lint:styles [-- --fix] markdown #Check markdown for errors:
npm run lint:markdown [-- --fix] clean #Delete temporary directories:
npm run clean start #Start local development server:
npm run start build #Build production website:
npm run build functions #Build Lambda functions:
npm run build:functions preview #Build production website including draft and future content:
npm run build:preview `}),e.add({id:4,href:"/docs/help/",title:"Help",description:"Help Doks.",content:""}),e.add({id:5,href:"/docs/help/how-to-update/",title:"How to Update",description:"Regularly update the installed npm packages to keep your Doks website stable, usable, and secure.",content:`ðŸ’¡ Learn more about semantic versioning and advanced range syntax. Check for outdated packages #The npm outdated command will check the registry to see if any (or, specific) installed packages are currently outdated:
npm outdated [[\u0026lt;@scope\u0026gt;/]\u0026lt;pkg\u0026gt; ...] Update packages #The npm update command will update all the packages listed to the latest version (specified by the tag config), respecting semver:
npm update [\u0026lt;pkg\u0026gt;...] `}),e.add({id:6,href:"/docs/help/troubleshooting/",title:"Troubleshooting",description:"Solutions to common problems.",content:`Problems updating npm packages #Delete the ./node_modules folder, and run again:
npm install Problems with cache #Delete the temporary directories:
npm run clean `}),e.add({id:7,href:"/docs/help/faq/",title:"FAQ",description:"Answers to frequently asked questions.",content:`Hyas? #Doks is a Hyas theme build by the creator of Hyas.
Footer notice? #Please keep it in place.
Keyboard shortcuts for search? #focus: Ctrl + / select: â†“ and â†‘ open: Enter close: Esc Other documentation? #Netlify Hugo Can I get support? #Create a topic:
Netlify Community Hugo Forums Doks Discussions Contact the creator? #Send h-enk a message:
Netlify Community Hugo Forums Doks Discussions `}),e.add({id:8,href:"/docs/cyber-security/encryption/encryption-basics/",title:"Encryption Basics",description:`Symmetric Encryption #\u0026quot;\u0026quot;\u0026quot;Fernet is built on top of a number of standard cryptographic primitives. Specifically it uses:AES in CBC mode with a 128-bit key for encryption; using PKCS7 padding.HMAC using SHA256 for authentication.Initialization vectors are generated using os.urandom().\u0026quot;\u0026quot;\u0026quot;from cryptography.fernet import Fernetkey = Fernet.generate_key() # Generates a 128-bit key for encryptionprint(\u0026quot;Key:\u0026quot;, key)f = Fernet(key)data = bytes(\u0026quot;Hey dont look at me!\u0026quot;, \u0026quot;utf-8\u0026quot;)encrypted_data = f.`,content:`Symmetric Encryption #\u0026quot;\u0026quot;\u0026quot;Fernet is built on top of a number of standard cryptographic primitives. Specifically it uses:AES in CBC mode with a 128-bit key for encryption; using PKCS7 padding.HMAC using SHA256 for authentication.Initialization vectors are generated using os.urandom().\u0026quot;\u0026quot;\u0026quot;from cryptography.fernet import Fernetkey = Fernet.generate_key() # Generates a 128-bit key for encryptionprint(\u0026quot;Key:\u0026quot;, key)f = Fernet(key)data = bytes(\u0026quot;Hey dont look at me!\u0026quot;, \u0026quot;utf-8\u0026quot;)encrypted_data = f.encrypt(data) # Encrypt the stringprint(\u0026quot;Encrypted text:\u0026quot;, encrypted_data)decrypted_data = f.decrypt(encrypted_data) # Decrypt using key stored in Fernet(key)print(\u0026quot;Decrypted text:\u0026quot;, decrypted_data.decode())\u0026quot;\u0026quot;\u0026quot;Key: b'TMz6kOOm3spmspIMWXzSmKrNyBxSArCniuL8bNfsjTQ='Encrypted text: b'gAAAAABmQuWOyH204b-4RP2t8ieJvo8f2I9-cHFZ6gi-hYvDBb52qtHMEyG8g-7d5nOYE--WG3xEALBwvTkiwPZ80oP2-RBmraP3xsFRGmNA-5t2QGALBzM='Decrypted text: Hey dont look at me!\u0026quot;\u0026quot;\u0026quot;Asymmetric (Public-key cryptography) #import rsa# Generate public and private RSA keyspublic_key, private_key = rsa.newkeys(1024)data = bytes(\u0026quot;super secret terraform spn creds\u0026quot;, \u0026quot;utf-8\u0026quot;)# Encrypt the message using the public key, ready for transportationprint(\u0026quot;Public Key:\u0026quot;, public_key)print(\u0026quot;Private Key:\u0026quot;, private_key)e_data = rsa.encrypt(data, public_key)print(\u0026quot;Encrypted text:\u0026quot;, e_data)# Decrypt the encrypted data using the private keyd_data = rsa.decrypt(e_data, private_key)print(\u0026quot;Decrypted text:\u0026quot;, d_data.decode())\u0026quot;\u0026quot;\u0026quot;Public Key: PublicKey(101987508639932692338508891363538110830817381389781440997155394194836861820691807857488533797587598881303863752019949392134001482679823178342082336376656311835479552411263788659885409175362320650059617243587340509704301437680095781514016186660016071937352756889883838683422329671123232296549810337014799352867, 65537)Private Key: PrivateKey(101987508639932692338508891363538110830817381389781440997155394194836861820691807857488533797587598881303863752019949392134001482679823178342082336376656311835479552411263788659885409175362320650059617243587340509704301437680095781514016186660016071937352756889883838683422329671123232296549810337014799352867, 65537, 17626875053245000627405743510914387008570250072509489024135666112957827392815907160867488934880674009010617890949081690719774093936468821293021745318710431651208802993166297754242748455507371482485461736885364834337681692945837554181406044355231862066341207341638183260787079826630745986081401769048917427249, 44247025733648380466345103999395363455400590304138902492512990952980308582800388029990151854076770496807828574439995344803245172852441019163757734771341041537154443, 2304957382985736131798203939805264151670628509437404137008388441196289609101245674420439509869331288252674746091461771835847915698681842521364169)Encrypted text: b'6\\xa3\\x1e\\xed\\x89E\\xce\\x08|-\\xc3\\x03\\xdefFd\\xe0t\\x86\\xb1\\xbe\\x0ev\\xc8\\x15\\xcaw\\xee\\xc2\\xc6\\x1e\\x93Y\u0026quot;+@\\x8d\\xbe\\xe0\\xe0\\x8a\\\\\\xe9\\x14H\\xc4\\xee\\x07\\x88\\xdeV\`\\xdaW2y\\xfdt\\x14G\\n;\\x83\\xa0\\x87nO~^\\xa5\\x1by~\\x8a\\xcd\\x9d\\xd92\\x0f\\xb8\\xac\\xec\\x03\`\`\\x8b\\x98\\xf0\\xe7\\x9bgz\\x89s\\xc7\$}\\xa4\\xa4[O\\x99k\\x8d)\\xcc\\x1c\\xbbm\\x92\\x83\\xee\\xf0\\xcbw\\x17Y\\xf2US\\xea|\\xb3@2fua'Decrypted text: super secret terraform spn creds\u0026quot;\u0026quot;\u0026quot;Notes #We Encrypt with a public key provided, and decrypt with a private key With RSA you can only encrypt data less than the size of the key therefor it does not make sense to encrypt large files Common approach is to encrypt files with symmetric key then use asymmetric encryption to send the symmetric key Public Key Encryption with Symmetric Encryption #flowchart LR;subgraph Clientsubgraph \u0026quot;Asymmetric Key\u0026quot;PUBKA-C(Public Key)PRIKA-C(Private Key)endsubgraph \u0026quot;Symmetric Key\u0026quot;PRIKS-C(Private Key)endendsubgraph Serversubgraph \u0026quot;Asymmetric Key\u0026quot;PUBKA-S(Public Key)PRIKA-S(Private Key)endendFile -- 1. Encrypted --\u0026gt; PRIKS-CPRIKS-C -- 2. Gets encrypted using key --\u0026gt; PUBKA-SPUBKA-S -- 3. Decrypt symmetric key --\u0026gt; PRIKA-SPRIKA-S -- 4. Decrypt File --\u0026gt; File`}),e.add({id:9,href:"/docs/cyber-security/",title:"Cyber Security",description:"",content:""}),e.add({id:10,href:"/docs/",title:"Docs",description:"Docs Doks.",content:""}),search.addEventListener("input",t,!0);function t(){const s=5;var n=this.value,o=e.search(n,{limit:s,enrich:!0});const t=new Map;for(const e of o.flatMap(e=>e.result)){if(t.has(e.doc.href))continue;t.set(e.doc.href,e.doc)}if(suggestions.innerHTML="",suggestions.classList.remove("d-none"),t.size===0&&n){const e=document.createElement("div");e.innerHTML=`No results for "<strong>${n}</strong>"`,e.classList.add("suggestion__no-results"),suggestions.appendChild(e);return}for(const[r,a]of t){const n=document.createElement("div");suggestions.appendChild(n);const e=document.createElement("a");e.href=r,n.appendChild(e);const o=document.createElement("span");o.textContent=a.title,o.classList.add("suggestion__title"),e.appendChild(o);const i=document.createElement("span");if(i.textContent=a.description,i.classList.add("suggestion__description"),e.appendChild(i),suggestions.appendChild(n),suggestions.childElementCount==s)break}}})()